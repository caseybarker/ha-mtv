######################
# Lighting Automation
######################
- id: 'balcony_on_sunset'
  alias: Balcony On at Sunset
  trigger:
  - event: sunset
    platform: sun
  condition: []
  action:
  # Use scene for simultaneous response
  - service: insteon.scene_on
    data:
      group: 1
  # Hit lights individually to sync light states in HA
  - service: light.turn_on
    data:
      entity_id: 
        - light.front_balcony_guest
        - light.front_balcony_den

- id: 'balcony_off_night'
  alias: Balcony Off at Night
  trigger:
  - at: '22:30'
    platform: time
  condition: []
  action:
  - service: insteon.scene_off
    data:
      group: 1
  - service: light.turn_off
    data:
      entity_id: 
        - light.front_balcony_guest
        - light.front_balcony_den

- id: 'back_yard_on_sunset'
  alias: Back Yard On at Sunset
  trigger:
  - event: sunset
    platform: sun
  condition: []
  action:
  - service: insteon.scene_on
    data:
      group: 2
  - service: light.turn_on
    data:
      entity_id: 
        - light.back_yard_sconce
        - light.garage_service_sconce
  - service: switch.turn_on
    data:
      entity_id:
        - switch.back_yard_ground_lights

- id: 'back_yard_off_night'
  alias: Back Yard Off at Night
  trigger:
  - at: '22:30'
    platform: time
  condition: []
  action:
  - service: insteon.scene_off
    data:
      group: 2
  - service: light.turn_off
    data:
      entity_id: 
        - light.back_yard_sconce
        - light.garage_service_sconce
  - service: switch.turn_off
    data:
      entity_id:
        - switch.back_yard_ground_lights

- id: 'front_porch_on_sunset'
  alias: Front Porch On at Sunset
  trigger:
  - event: sunset
    platform: sun
  condition: []
  action:
  - service: light.turn_on
    data:
      entity_id:
      - light.front_porch_sconce

- id: 'front_porch_off_sunrise'
  alias: Front Porch Off at Sunrise
  trigger:
  - event: sunrise
    platform: sun
  condition: []
  action:
  - service: light.turn_off
    data:
      entity_id:
      - light.front_porch_sconce

########
# Alarm
########
- id: 'alarm_trigger_home'
  alias: 'Trigger alarm while armed home'
  trigger:
  - platform: state
    entity_id: group.all_doors
    to: 'on'
  - platform: state
    entity_id: group.all_windows
    to: 'on'
  condition:
  - condition: state
    entity_id: alarm_control_panel.ha_alarm
    state: armed_home
  action:
  - service: alarm_control_panel.alarm_trigger
    entity_id: alarm_control_panel.ha_alarm

- id: 'alarm_trigger_away'
  alias: 'Trigger alarm while armed away'
  trigger:
  - platform: state
    entity_id: group.all_doors
    to: 'on'
  - platform: state
    entity_id: group.all_windows
    to: 'on'
  - platform: state
    entity_id: group.all_motions
    to: 'on'
  condition:
  - condition: state
    entity_id: alarm_control_panel.ha_alarm
    state: armed_away
  action:
  - service: alarm_control_panel.alarm_trigger
    entity_id: alarm_control_panel.ha_alarm

- id: 'alarm_disarm_august'
  alias: 'Disarm alarm away when front door unlocked by user'
  trigger:
  - platform: state
    entity_id: lock.front_door
    to: "unlocked"
  condition:
  - condition: template
    value_template: "{{ not is_state_attr('lock.front_door', 'changed_by', 'Manual')}}"
  - condition: template
    value_template: "{{ not is_state('alarm_control_panel.ha_alarm', 'disarmed')}}"
  action:
  - service: alarm_control_panel.alarm_disarm
    data:
      entity_id: alarm_control_panel.ha_alarm
      code: !secret alarm_code
  - service: notify.barker_sfbay
    data_template:
      message: "Alarm disarmed, front door {{ states('lock.front_door') }} by {{ state_attr('lock.front_door', 'changed_by') }}"

- id: 'alarm_trigger'
  alias: 'Alarm trigger'
  trigger:
  - platform: state
    entity_id: alarm_control_panel.ha_alarm
    to: 'triggered'
  action:
  - service: notify.barker_sfbay
    data_template:
      message: "ALARM"

#######
# Misc
#######
- id: 'reconnect_hangouts'
  alias: Reconnect Hangouts
  trigger:
  - entity_id: sensor.external_ip
    platform: state
  condition:
  - condition: template
    value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  - condition: template
    value_template: '{{ not is_state("sensor.external_ip", "unavailable") }}'
  action:
  - service: hangouts.reconnect
